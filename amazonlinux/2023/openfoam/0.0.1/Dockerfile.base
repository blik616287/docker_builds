FROM amazonlinux:2023

# Install system dependencies including OpenMPI development packages
RUN dnf update -y && \
    dnf install -y \
    openssh-server \
    openssh-clients \
    openmpi \
    openmpi-devel \
    gcc \
    gcc-c++ \
    make \
    bind-utils \
    iproute \
    iputils \
    nc \
    procps-ng \
    jq \
    nano \
    net-tools \
    which \
    kmod \
    && dnf clean all

RUN dnf clean all && \
    rm -rf /var/cache/yum

# Install Lustre client - AL2023 uses dnf instead of yum
RUN dnf install -y kmod-lustre-client lustre-client || echo "Lustre client package not found - will rely on host modules"

# Add OpenMPI to the path
ENV PATH="/usr/lib64/openmpi/bin:${PATH}" \
    LD_LIBRARY_PATH="/usr/lib64/openmpi/lib:${LD_LIBRARY_PATH}"

# Create app directory and SSH directories
WORKDIR /app
RUN mkdir -p /var/run/sshd && \
    mkdir -p /root/.ssh && \
    chmod 700 /root/.ssh && \
    echo "Host *" > /root/.ssh/config && \
    echo "  StrictHostKeyChecking no" >> /root/.ssh/config && \
    echo "  UserKnownHostsFile /dev/null" >> /root/.ssh/config && \
    chmod 600 /root/.ssh/config

# Configure SSH
RUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config || \
    sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/' /etc/ssh/sshd_config 
RUN sed -i 's/#StrictHostKeyChecking ask/StrictHostKeyChecking no/' /etc/ssh/ssh_config && \
    echo "UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config && \
    echo "LogLevel ERROR" >> /etc/ssh/ssh_config

# Disable IPv6
RUN echo "net.ipv6.conf.all.disable_ipv6 = 1" >> /etc/sysctl.conf && \
    echo "net.ipv6.conf.default.disable_ipv6 = 1" >> /etc/sysctl.conf && \
    echo "net.ipv6.conf.lo.disable_ipv6 = 1" >> /etc/sysctl.conf

# Configure SSH to not use IPv6
RUN sed -i 's/#AddressFamily any/AddressFamily inet/' /etc/ssh/sshd_config && \
    sed -i 's/#ListenAddress 0.0.0.0/ListenAddress 0.0.0.0/' /etc/ssh/sshd_config

# Copy application files
COPY pingpong.c /app/
COPY entrypoint.sh /app/

# Compile test
RUN mpicc pingpong.c -o pingpong

# Make entrypoint executable
RUN chmod +x /app/entrypoint.sh

# Expose all ports instead of just SSH and MPI range
EXPOSE 1-65535

# Set the entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]
